package com.cs407.shopsmart;
import androidx.appcompat.app.ActionBar;
import androidx.appcompat.app.AppCompatActivity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.MenuItem;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.PBEKeySpec;
import java.security.SecureRandom;
import java.util.Base64;
import java.util.Map;

public class LoginScreen extends AppCompatActivity {

    // SharedPreferences for storing login information
    SharedPreferences loginDatabase;

    // SecureRandom for generating random values
    SecureRandom randomGen;

    // UI components
    Button loginButton;
    EditText usernameField;
    EditText passwordField;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login_screen);

        // Initialize SecureRandom and SharedPreferences
        randomGen = new SecureRandom();
        loginDatabase = getSharedPreferences("loginDatabase", MODE_PRIVATE);

        // Shows the nav arrow on top of screen
        ActionBar actionBar = getSupportActionBar();
        actionBar.setDisplayHomeAsUpEnabled(true);

        // Initialize UI components
        loginButton = findViewById(R.id.buttonLogin);
        usernameField = findViewById(R.id.editTextUsername);
        passwordField = findViewById(R.id.editTextPassword);

        // Set click listener for the login button
        loginButton.setOnClickListener(v -> {
            boolean validUsername = false;
            boolean validPassword = false;
            String username = "";
            String password = "";
            SecretKey hashedPassword = null;
            byte[] salt = null;

            // Get username and password from input fields
            username = usernameField.getText().toString();
            password = passwordField.getText().toString();
            // Iterate over stored usernames and check for a match
            Map<String, ?> keyValues = loginDatabase.getAll();
            for (Map.Entry<String, ?> keyValuePair : keyValues.entrySet()){
                if(username.equals(keyValuePair.getKey().toString())){
                    validUsername = true;
                    // username entry is real, get salt
                    salt = Base64.getDecoder().decode(keyValuePair.getValue().toString().split(",")[1]);
                    // re-hash password and check the result
                    try {
                        hashedPassword = pbkdf2(password.toCharArray(), salt, 4096, 256);
                        String decodedPassword = Base64.getEncoder().encodeToString(hashedPassword.getEncoded());
                        if(decodedPassword.equals(keyValuePair.getValue().toString().split(",")[0])){
                            validPassword = true;
                        }
                    } catch (NoSuchAlgorithmException e) {
                        throw new RuntimeException(e);
                    } catch (InvalidKeySpecException e) {
                        throw new RuntimeException(e);
                    }
                }
            }
            // Check if both username and password are valid
            if(validPassword && validUsername){
                // If valid, navigate to HomeScreen activity
                startActivity(new Intent(this, HomeScreen.class));
            } else {
                // If invalid, clear input fields and show a toast message
                usernameField.setText("");
                passwordField.setText("");
                Toast.makeText(this, "Invalid login!", Toast.LENGTH_SHORT).show();
            }
        });


    }

    /**
     * Deals with navigating back by one activity.
     *
     * @param item The menu item that was selected.
     * @return
     */
    @Override
    public boolean onOptionsItemSelected(MenuItem item){
        int id = item.getItemId();

        if (id == android.R.id.home){
            navigateUpTo(new Intent(this, HomeLoginScreen.class));
            return true;
        }
        return false;
    }

    /**
     * A helper function that can take in a password, a random salt, and allows the user
     * to hash their password to be placed into the database safely.
     *
     * @param password the users plaintext password
     * @param salt a randomly generated byte array to include with the plaintext password
     * @param iterationCount defaulted to 4096
     * @param keyLength defaulted to 256
     * @return the result of the password+salt, hashed!
     * @throws NoSuchAlgorithmException
     * @throws InvalidKeySpecException
     */
    public static SecretKey pbkdf2(char[] password, byte[] salt, int iterationCount, int keyLength) throws NoSuchAlgorithmException, InvalidKeySpecException {
        SecretKeyFactory factory = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA1");
        PBEKeySpec spec = new PBEKeySpec(password, salt, iterationCount, keyLength);
        return factory.generateSecret(spec);
    }


}